{"ast":null,"code":"import { map, Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SupabaseService {\n  constructor(http) {\n    this.http = http;\n    this.supaURL = 'https://bqhnvwfovmcxrqrsmfxr.supabase.co/rest/v1/';\n    this.productURL = `${this.supaURL}products?select=*`;\n    this.headers = {\n      'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaG52d2Zvdm1jeHJxcnNtZnhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjYyNzk4MDYsImV4cCI6MTk4MTg1NTgwNn0.jVhmEO__GFSxqRlbzdCxyeb_VxWWD7Bqk9sj3Po8xtM',\n      'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaG52d2Zvdm1jeHJxcnNtZnhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjYyNzk4MDYsImV4cCI6MTk4MTg1NTgwNn0.jVhmEO__GFSxqRlbzdCxyeb_VxWWD7Bqk9sj3Po8xtM',\n      'Range': '0-9'\n    };\n    this.productsSubject = new Subject();\n  }\n  getProducts() {\n    // return this.http.get<IProduct[]>(this.productURL,{headers: this.headers});\n    this.http.get(this.productURL, {\n      headers: this.headers\n    }).subscribe(prods => this.productsSubject.next(prods));\n  }\n  searchProducts(filtre) {\n    this.http.get(`${this.supaURL}?asin=like.${filtre}&select=*`, {\n      headers: this.headers\n    }).subscribe(prods => this.productsSubject.next(prods));\n  }\n  getReviews(asin) {\n    let headersReviews = {\n      ...this.headers\n    };\n    headersReviews.Range = '0-1000';\n    return this.http.get(`${this.supaURL}reviews?asin=eq.${asin}&select=*`, {\n      headers: headersReviews\n    });\n  }\n  updateReview(review) {\n    let headersReviews = {\n      ...this.headers\n    };\n    delete headersReviews.Range;\n    headersReviews[\"Content-Type\"] = \"application/json\";\n    headersReviews[\"Prefer\"] = \"return=minimal\";\n    headersReviews[\"Content-Type\"] = \"application/json\";\n    return this.http.patch(`${this.supaURL}reviews?id=eq.${review.id}`, JSON.stringify(review), {\n      headers: headersReviews\n    }).pipe(map(r => true));\n  }\n}\nSupabaseService.ɵfac = function SupabaseService_Factory(t) {\n  return new (t || SupabaseService)(i0.ɵɵinject(i1.HttpClient));\n};\nSupabaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: SupabaseService,\n  factory: SupabaseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,EAAEC,OAAO,QAAQ,MAAM;;;AAQnC,OAAM,MAAOC,eAAe;EAW1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IATxB,YAAO,GAAG,mDAAmD;IAC7D,eAAU,GAAG,GAAG,IAAI,CAACC,OAAO,mBAAmB;IAC/C,YAAO,GAAG;MAAC,QAAQ,EAAE,kNAAkN;MACvO,eAAe,EAAE,yNAAyN;MAC1O,OAAO,EAAE;IAAK,CAAC;IAMb,IAAI,CAACC,eAAe,GAAG,IAAIL,OAAO,EAAE;EACrC;EAEDM,WAAW;IACV;IACA,IAAI,CAACH,IAAI,CAACI,GAAG,CAAa,IAAI,CAACC,UAAU,EAAC;MAACC,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC,CAC/DC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACN,eAAe,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;EACxD;EAEAE,cAAc,CAACC,MAAa;IAC1B,IAAI,CAACX,IAAI,CAACI,GAAG,CAAa,GAAG,IAAI,CAACH,OAAO,cAAcU,MAAM,WAAW,EAAC;MAACL,OAAO,EAAE,IAAI,CAACA;IAAO,CAAC,CAAC,CAC/FC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACN,eAAe,CAACO,IAAI,CAACD,KAAK,CAAC,CAAC;EACxD;EAEAI,UAAU,CAACC,IAAW;IACpB,IAAIC,cAAc,GAAG;MAAC,GAAG,IAAI,CAACR;IAAO,CAAC;IACtCQ,cAAc,CAACC,KAAK,GAAG,QAAQ;IAC/B,OAAO,IAAI,CAACf,IAAI,CAACI,GAAG,CAAY,GAAG,IAAI,CAACH,OAAO,mBAAmBY,IAAI,WAAW,EAAC;MAACP,OAAO,EAAEQ;IAAc,CAAC,CAAC;EAC9G;EAEAE,YAAY,CAACC,MAAc;IACzB,IAAIH,cAAc,GAAO;MAAC,GAAG,IAAI,CAACR;IAAO,CAAC;IAC1C,OAAOQ,cAAc,CAACC,KAAK;IAC3BD,cAAc,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACnDA,cAAc,CAAC,QAAQ,CAAC,GAAG,gBAAgB;IAC3CA,cAAc,CAAC,cAAc,CAAC,GAAG,kBAAkB;IACnD,OAAO,IAAI,CAACd,IAAI,CAACkB,KAAK,CACpB,GAAG,IAAI,CAACjB,OAAO,iBAAiBgB,MAAM,CAACE,EAAE,EAAE,EAC3CC,IAAI,CAACC,SAAS,CAACJ,MAAM,CAAC,EACtB;MAACX,OAAO,EAAGQ;IAAc,CAAC,CACzB,CAACQ,IAAI,CACJ1B,GAAG,CAAC2B,CAAC,IAAG,IAAI,CAAC,CACd;EACL;;AA7CWzB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAA0B,SAAf1B,eAAe;EAAA2B,YAFd;AAAM","names":["map","Subject","SupabaseService","constructor","http","supaURL","productsSubject","getProducts","get","productURL","headers","subscribe","prods","next","searchProducts","filtre","getReviews","asin","headersReviews","Range","updateReview","review","patch","id","JSON","stringify","pipe","r","factory","providedIn"],"sourceRoot":"","sources":["/home/jose/repositorisIES/dwec-22-23/08 - angular/reviews/src/app/services/supabase.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map, Subject } from 'rxjs';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { IProduct } from '../interfaces/i-product';\nimport { IReview } from '../interfaces/i-review';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupabaseService {\n\n  supaURL = 'https://bqhnvwfovmcxrqrsmfxr.supabase.co/rest/v1/';\n  productURL = `${this.supaURL}products?select=*`;\n  headers = {'apikey': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaG52d2Zvdm1jeHJxcnNtZnhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjYyNzk4MDYsImV4cCI6MTk4MTg1NTgwNn0.jVhmEO__GFSxqRlbzdCxyeb_VxWWD7Bqk9sj3Po8xtM',\n  'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJxaG52d2Zvdm1jeHJxcnNtZnhyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjYyNzk4MDYsImV4cCI6MTk4MTg1NTgwNn0.jVhmEO__GFSxqRlbzdCxyeb_VxWWD7Bqk9sj3Po8xtM',\n  'Range': '0-9'};\n  //reviewURL = `${this.supaURL}reviews?asin=eq.1&select=*`;\n\n  productsSubject: Subject<IProduct[]>;\n\n  constructor(private http: HttpClient) {\n    this.productsSubject = new Subject();\n   }\n\n  getProducts(): void{\n   // return this.http.get<IProduct[]>(this.productURL,{headers: this.headers});\n   this.http.get<IProduct[]>(this.productURL,{headers: this.headers})\n     .subscribe(prods => this.productsSubject.next(prods))\n  }\n\n  searchProducts(filtre:string): void{\n    this.http.get<IProduct[]>(`${this.supaURL}?asin=like.${filtre}&select=*`,{headers: this.headers})\n     .subscribe(prods => this.productsSubject.next(prods))\n  }\n\n  getReviews(asin:string): Observable<IReview[]>{\n    let headersReviews = {...this.headers};\n    headersReviews.Range = '0-1000';\n    return this.http.get<IReview[]>(`${this.supaURL}reviews?asin=eq.${asin}&select=*`,{headers: headersReviews})\n  }\n\n  updateReview(review:IReview): Observable<boolean>{\n    let headersReviews:any = {...this.headers};\n    delete headersReviews.Range;\n    headersReviews[\"Content-Type\"] = \"application/json\";\n    headersReviews[\"Prefer\"] = \"return=minimal\";\n    headersReviews[\"Content-Type\"] = \"application/json\";\n    return this.http.patch<IReview>(\n      `${this.supaURL}reviews?id=eq.${review.id}`,\n      JSON.stringify(review),\n      {headers:  headersReviews}\n      ).pipe(\n        map(r=> true)\n      )\n  }\n \n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}